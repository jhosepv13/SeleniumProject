package com.portal.tests;

import java.lang.reflect.Method;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.ie.InternetExplorerDriver;
import org.openqa.selenium.opera.OperaDriver;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Parameters;
import org.testng.annotations.Test;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.reporter.ExtentHtmlReporter;
import com.aventstack.extentreports.reporter.configuration.Theme;
import com.portal.utils.Constants;

public class BaseTest {
	
	public ThreadLocal<WebDriver> driver = new ThreadLocal<>();

	public ExtentHtmlReporter htmlReporter;
	public static ExtentReports extent;
	public static ExtentTest logger;
	
	@BeforeTest
	public void startReport() {

		htmlReporter = new ExtentHtmlReporter(
				System.getProperty("user.dir") + "/src/test/resources/reports/MyReport.html");
		extent = new ExtentReports();
		extent.attachReporter(htmlReporter);
		extent.setSystemInfo("Hostname", "Galaxy Final Project");
		extent.setSystemInfo("Environment", "SandBox");
		extent.setSystemInfo("Username", "Jhosep Bazan Bernales");

		// settting Report
		htmlReporter.config().setDocumentTitle("Report of PHPTRAVELS");
		htmlReporter.config().setReportName("Report");
		htmlReporter.config().setTheme(Theme.DARK);

	}
	
	public void setupDriver(String browserName) {
		
		if (browserName.equalsIgnoreCase("Chrome")) {
			setDriver(new ChromeDriver());
		} else if (browserName.equalsIgnoreCase("Firefox")) {
			setDriver(new FirefoxDriver());
		} else if (browserName.equalsIgnoreCase("opera")) {
			setDriver(new OperaDriver());
		} else if (browserName.equalsIgnoreCase("IE")) {
			setDriver(new InternetExplorerDriver());
		}
		
	}
	
	public void setDriver(WebDriver driver) {
		this.driver.set(driver);
	}

	public WebDriver getDriver() {
		return this.driver.get();
	}
	
	@BeforeMethod
	@Parameters(value = { "browserName" })
	public void setupBrowser(String browserName, Method testMethod) {

		logger = extent.createTest(testMethod.getName());
		setupDriver(browserName);
		getDriver().manage().window().maximize();
		getDriver().get(Constants.url);
		getDriver().manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);

	}
	
	
}
